// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		F617C68D259F4DE7008590E8 /* 剑指 Offer 06. 从尾到头打印链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F617C68C259F4DE7008590E8 /* 剑指 Offer 06. 从尾到头打印链表.swift */; };
		F617C690259F546D008590E8 /* 剑指 Offer 07. 重建二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F617C68F259F546D008590E8 /* 剑指 Offer 07. 重建二叉树.swift */; };
		F61BA2E625AC81B2000C8B55 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = F61BA2E525AC81B2000C8B55 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift */; };
		F61BA2E925AC929C000C8B55 /* 剑指 Offer 03. 数组中重复的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F61BA2E825AC929C000C8B55 /* 剑指 Offer 03. 数组中重复的数字.swift */; };
		F61BA2EC25AC955E000C8B55 /* 剑指 Offer 57. 和为s的两个数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F61BA2EB25AC955E000C8B55 /* 剑指 Offer 57. 和为s的两个数字.swift */; };
		F61BA2EF25ADE97A000C8B55 /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F61BA2EE25ADE97A000C8B55 /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift */; };
		F63BA25725E2964500FC412A /* 328. 奇偶链.swift in Sources */ = {isa = PBXBuildFile; fileRef = F63BA25625E2964500FC412A /* 328. 奇偶链.swift */; };
		F63BA25A25E29C5D00FC412A /* 19. 删除链表的倒数第 N 个结点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F63BA25925E29C5D00FC412A /* 19. 删除链表的倒数第 N 个结点.swift */; };
		F6475360257A32BD004AEEEA /*  相同的树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F647535F257A32BD004AEEEA /*  相同的树.swift */; };
		F647536F257E1D4E004AEEEA /* 二叉树的最小深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = F647536E257E1D4E004AEEEA /* 二叉树的最小深度.swift */; };
		F669A9672574DF2C00429AC2 /* 剑指 Offer 27_二叉树的镜像.swift in Sources */ = {isa = PBXBuildFile; fileRef = F669A9662574DF2C00429AC2 /* 剑指 Offer 27_二叉树的镜像.swift */; };
		F669A96A2574ECBD00429AC2 /* 剑指 Offer 55 - I. 二叉树的深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = F669A9692574ECBD00429AC2 /* 剑指 Offer 55 - I. 二叉树的深度.swift */; };
		F66CDBF725A35BF2004AE799 /* 剑指 Offer 31. 栈的压入、弹出序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDBF625A35BF2004AE799 /* 剑指 Offer 31. 栈的压入、弹出序列.swift */; };
		F66CDBFA25A4ADEE004AE799 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDBF925A4ADEE004AE799 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift */; };
		F66CDBFD25A5ED3A004AE799 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDBFC25A5ED3A004AE799 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */; };
		F66CDC0725A5FE8E004AE799 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC0625A5FE8E004AE799 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */; };
		F66CDC0A25A89D17004AE799 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC0925A89D17004AE799 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift */; };
		F66CDC0D25AAE3BF004AE799 /* 剑指 Offer 40. 最小的k个数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC0C25AAE3BF004AE799 /* 剑指 Offer 40. 最小的k个数.swift */; };
		F66CDC1025AB2747004AE799 /* 剑指 Offer 58 - II. 左旋转字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC0F25AB2747004AE799 /* 剑指 Offer 58 - II. 左旋转字符串.swift */; };
		F66CDC1425AB2916004AE799 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC1325AB2916004AE799 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */; };
		F66CDC1725AB33C4004AE799 /* 剑指 Offer 57 - II. 和为s的连续正数序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC1625AB33C4004AE799 /* 剑指 Offer 57 - II. 和为s的连续正数序列.swift */; };
		F66CDC1A25AB3924004AE799 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.swift in Sources */ = {isa = PBXBuildFile; fileRef = F66CDC1925AB3924004AE799 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.swift */; };
		F67FEB7F25AF2ABE00E50FE5 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB7E25AF2ABE00E50FE5 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift */; };
		F67FEB8225AF2FC700E50FE5 /* 剑指 Offer 50. 第一个只出现一次的字符.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB8125AF2FC700E50FE5 /* 剑指 Offer 50. 第一个只出现一次的字符.swift */; };
		F67FEB8525B1D24F00E50FE5 /* 剑指 Offer 42. 连续子数组的最大和.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB8425B1D24F00E50FE5 /* 剑指 Offer 42. 连续子数组的最大和.swift */; };
		F67FEB8825B31AF300E50FE5 /* 剑指 Offer 55 - II. 平衡二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB8725B31AF300E50FE5 /* 剑指 Offer 55 - II. 平衡二叉树.swift */; };
		F67FEB8B25B31F3C00E50FE5 /* 剑指 Offer 28. 对称的二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB8A25B31F3C00E50FE5 /* 剑指 Offer 28. 对称的二叉树.swift */; };
		F67FEB8E25B3316B00E50FE5 /* 剑指 Offer 65. 不用加减乘除做加法.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB8D25B3316B00E50FE5 /* 剑指 Offer 65. 不用加减乘除做加法.swift */; };
		F67FEB9125B3E41C00E50FE5 /* 剑指 Offer 61. 扑克牌中的顺子.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB9025B3E41C00E50FE5 /* 剑指 Offer 61. 扑克牌中的顺子.swift */; };
		F67FEB9425B3EDC300E50FE5 /* 剑指 Offer 59 - I. 滑动窗口的最大值.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB9325B3EDC300E50FE5 /* 剑指 Offer 59 - I. 滑动窗口的最大值.swift */; };
		F67FEB9725B3FE6700E50FE5 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB9625B3FE6700E50FE5 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift */; };
		F67FEB9A25B40C2200E50FE5 /* 剑指 Offer 58 - I. 翻转单词顺序.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB9925B40C2200E50FE5 /* 剑指 Offer 58 - I. 翻转单词顺序.swift */; };
		F67FEB9D25B41BC300E50FE5 /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift in Sources */ = {isa = PBXBuildFile; fileRef = F67FEB9C25B41BC300E50FE5 /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift */; };
		F695DA462571F481004ECB52 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = F695DA452571F481004ECB52 /* main.swift */; };
		F6B2E46A25A195EB00E3EB30 /* 剑指 Offer 26. 树的子结构.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6B2E46925A195EB00E3EB30 /* 剑指 Offer 26. 树的子结构.swift */; };
		F6B2E46D25A1A88100E3EB30 /* 剑指 Offer 29. 顺时针打印矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6B2E46C25A1A88100E3EB30 /* 剑指 Offer 29. 顺时针打印矩阵.swift */; };
		F6B2E47025A1F8AE00E3EB30 /* 剑指 Offer 30. 包含min函数的栈.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6B2E46F25A1F8AD00E3EB30 /* 剑指 Offer 30. 包含min函数的栈.swift */; };
		F6B7386425BC5C8B00B16630 /* 111.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6B7386325BC5C8B00B16630 /* 111.swift */; };
		F6C0B818259F174000A29262 /* 剑指 Offer 04. 二维数组中的查找.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0B817259F174000A29262 /* 剑指 Offer 04. 二维数组中的查找.swift */; };
		F6C0B81D259F239800A29262 /* 剑指 Offer 05. 替换空格.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0B81C259F239800A29262 /* 剑指 Offer 05. 替换空格.swift */; };
		F6C0F740258F1A4700B4C3AA /* 冒泡.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F73F258F1A4700B4C3AA /* 冒泡.swift */; };
		F6C0F74A258F3A6B00B4C3AA /* 选择.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F749258F3A6B00B4C3AA /* 选择.swift */; };
		F6C0F74D258F3BB000B4C3AA /* 堆排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F74C258F3BB000B4C3AA /* 堆排序.swift */; };
		F6C0F750258F618700B4C3AA /* 插入.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F74F258F618700B4C3AA /* 插入.swift */; };
		F6C0F755258F6B5100B4C3AA /* 二分查找.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F754258F6B5100B4C3AA /* 二分查找.swift */; };
		F6C0F759258F6F3400B4C3AA /* 合并两个有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F758258F6F3400B4C3AA /* 合并两个有序数组.swift */; };
		F6C0F75E258F752900B4C3AA /* 合并两个有序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6C0F75D258F752900B4C3AA /* 合并两个有序链表.swift */; };
		F6CDFAED25A03C29008471BE /* 剑指 Offer 09. 用两个栈实现队列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFAEC25A03C29008471BE /* 剑指 Offer 09. 用两个栈实现队列.swift */; };
		F6CDFAF025A04130008471BE /* 剑指 Offer 11. 旋转数组的最小数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFAEF25A04130008471BE /* 剑指 Offer 11. 旋转数组的最小数字.swift */; };
		F6CDFAF325A04BB1008471BE /* 剑指 Offer 10- I. 斐波那契数列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFAF225A04BB1008471BE /* 剑指 Offer 10- I. 斐波那契数列.swift */; };
		F6CDFAF725A0559F008471BE /*  二进制中1的个数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFAF625A0559F008471BE /*  二进制中1的个数.swift */; };
		F6CDFAFC25A06637008471BE /* 剑指 Offer 16. 数值的整数次方.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFAFB25A06637008471BE /* 剑指 Offer 16. 数值的整数次方.swift */; };
		F6CDFB0025A07242008471BE /* 剑指 Offer 17. 打印从1到最大的n位数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFAFF25A07242008471BE /* 剑指 Offer 17. 打印从1到最大的n位数.swift */; };
		F6CDFB0325A07749008471BE /* 剑指 Offer 18. 删除链表的节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFB0225A07749008471BE /* 剑指 Offer 18. 删除链表的节点.swift */; };
		F6CDFB0625A08345008471BE /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFB0525A08345008471BE /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift */; };
		F6CDFB0925A0900C008471BE /* 剑指 Offer 22. 链表中倒数第k个节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFB0825A0900C008471BE /* 剑指 Offer 22. 链表中倒数第k个节点.swift */; };
		F6CDFB0D25A09417008471BE /* 剑指 Offer 24. 反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFB0C25A09417008471BE /* 剑指 Offer 24. 反转链表.swift */; };
		F6CDFB1125A0A281008471BE /* 剑指 Offer 25. 合并两个排序的链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F6CDFB1025A0A281008471BE /* 剑指 Offer 25. 合并两个排序的链表.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		F695DA402571F481004ECB52 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		F617C68C259F4DE7008590E8 /* 剑指 Offer 06. 从尾到头打印链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 06. 从尾到头打印链表.swift"; sourceTree = "<group>"; };
		F617C68F259F546D008590E8 /* 剑指 Offer 07. 重建二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 07. 重建二叉树.swift"; sourceTree = "<group>"; };
		F61BA2E525AC81B2000C8B55 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 - II. 从上到下打印二叉树 II.swift"; sourceTree = "<group>"; };
		F61BA2E825AC929C000C8B55 /* 剑指 Offer 03. 数组中重复的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 03. 数组中重复的数字.swift"; sourceTree = "<group>"; };
		F61BA2EB25AC955E000C8B55 /* 剑指 Offer 57. 和为s的两个数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 57. 和为s的两个数字.swift"; sourceTree = "<group>"; };
		F61BA2EE25ADE97A000C8B55 /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 62. 圆圈中最后剩下的数字.swift"; sourceTree = "<group>"; };
		F63BA25625E2964500FC412A /* 328. 奇偶链.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "328. 奇偶链.swift"; sourceTree = "<group>"; };
		F63BA25925E29C5D00FC412A /* 19. 删除链表的倒数第 N 个结点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "19. 删除链表的倒数第 N 个结点.swift"; sourceTree = "<group>"; };
		F647535F257A32BD004AEEEA /*  相同的树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = " 相同的树.swift"; sourceTree = "<group>"; };
		F647536E257E1D4E004AEEEA /* 二叉树的最小深度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树的最小深度.swift"; sourceTree = "<group>"; };
		F669A9662574DF2C00429AC2 /* 剑指 Offer 27_二叉树的镜像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 27_二叉树的镜像.swift"; sourceTree = "<group>"; };
		F669A9692574ECBD00429AC2 /* 剑指 Offer 55 - I. 二叉树的深度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 55 - I. 二叉树的深度.swift"; sourceTree = "<group>"; };
		F66CDBF625A35BF2004AE799 /* 剑指 Offer 31. 栈的压入、弹出序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 31. 栈的压入、弹出序列.swift"; sourceTree = "<group>"; };
		F66CDBF925A4ADEE004AE799 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 - I. 从上到下打印二叉树.swift"; sourceTree = "<group>"; };
		F66CDBFC25A5ED3A004AE799 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 33. 二叉搜索树的后序遍历序列.swift"; sourceTree = "<group>"; };
		F66CDC0625A5FE8E004AE799 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 34. 二叉树中和为某一值的路径.swift"; sourceTree = "<group>"; };
		F66CDC0925A89D17004AE799 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 39. 数组中出现次数超过一半的数字.swift"; sourceTree = "<group>"; };
		F66CDC0C25AAE3BF004AE799 /* 剑指 Offer 40. 最小的k个数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 40. 最小的k个数.swift"; sourceTree = "<group>"; };
		F66CDC0F25AB2747004AE799 /* 剑指 Offer 58 - II. 左旋转字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 58 - II. 左旋转字符串.swift"; sourceTree = "<group>"; };
		F66CDC1325AB2916004AE799 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 54. 二叉搜索树的第k大节点.swift"; sourceTree = "<group>"; };
		F66CDC1625AB33C4004AE799 /* 剑指 Offer 57 - II. 和为s的连续正数序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 57 - II. 和为s的连续正数序列.swift"; sourceTree = "<group>"; };
		F66CDC1925AB3924004AE799 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 68 - II. 二叉树的最近公共祖先.swift"; sourceTree = "<group>"; };
		F67FEB7E25AF2ABE00E50FE5 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 52. 两个链表的第一个公共节点.swift"; sourceTree = "<group>"; };
		F67FEB8125AF2FC700E50FE5 /* 剑指 Offer 50. 第一个只出现一次的字符.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 50. 第一个只出现一次的字符.swift"; sourceTree = "<group>"; };
		F67FEB8425B1D24F00E50FE5 /* 剑指 Offer 42. 连续子数组的最大和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 42. 连续子数组的最大和.swift"; sourceTree = "<group>"; };
		F67FEB8725B31AF300E50FE5 /* 剑指 Offer 55 - II. 平衡二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 55 - II. 平衡二叉树.swift"; sourceTree = "<group>"; };
		F67FEB8A25B31F3C00E50FE5 /* 剑指 Offer 28. 对称的二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 28. 对称的二叉树.swift"; sourceTree = "<group>"; };
		F67FEB8D25B3316B00E50FE5 /* 剑指 Offer 65. 不用加减乘除做加法.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 65. 不用加减乘除做加法.swift"; sourceTree = "<group>"; };
		F67FEB9025B3E41C00E50FE5 /* 剑指 Offer 61. 扑克牌中的顺子.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 61. 扑克牌中的顺子.swift"; sourceTree = "<group>"; };
		F67FEB9325B3EDC300E50FE5 /* 剑指 Offer 59 - I. 滑动窗口的最大值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 59 - I. 滑动窗口的最大值.swift"; sourceTree = "<group>"; };
		F67FEB9625B3FE6700E50FE5 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 53 - II. 0～n-1中缺失的数字.swift"; sourceTree = "<group>"; };
		F67FEB9925B40C2200E50FE5 /* 剑指 Offer 58 - I. 翻转单词顺序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 58 - I. 翻转单词顺序.swift"; sourceTree = "<group>"; };
		F67FEB9C25B41BC300E50FE5 /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 10- II. 青蛙跳台阶问题.swift"; sourceTree = "<group>"; };
		F695DA422571F481004ECB52 /* SwiftLeetCode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = SwiftLeetCode; sourceTree = BUILT_PRODUCTS_DIR; };
		F695DA452571F481004ECB52 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		F6B2E46925A195EB00E3EB30 /* 剑指 Offer 26. 树的子结构.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 26. 树的子结构.swift"; sourceTree = "<group>"; };
		F6B2E46C25A1A88100E3EB30 /* 剑指 Offer 29. 顺时针打印矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 29. 顺时针打印矩阵.swift"; sourceTree = "<group>"; };
		F6B2E46F25A1F8AD00E3EB30 /* 剑指 Offer 30. 包含min函数的栈.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 30. 包含min函数的栈.swift"; sourceTree = "<group>"; };
		F6B7386325BC5C8B00B16630 /* 111.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 111.swift; sourceTree = "<group>"; };
		F6C0B817259F174000A29262 /* 剑指 Offer 04. 二维数组中的查找.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 04. 二维数组中的查找.swift"; sourceTree = "<group>"; };
		F6C0B81C259F239800A29262 /* 剑指 Offer 05. 替换空格.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 05. 替换空格.swift"; sourceTree = "<group>"; };
		F6C0F73F258F1A4700B4C3AA /* 冒泡.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "冒泡.swift"; sourceTree = "<group>"; };
		F6C0F749258F3A6B00B4C3AA /* 选择.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "选择.swift"; sourceTree = "<group>"; };
		F6C0F74C258F3BB000B4C3AA /* 堆排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "堆排序.swift"; sourceTree = "<group>"; };
		F6C0F74F258F618700B4C3AA /* 插入.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "插入.swift"; sourceTree = "<group>"; };
		F6C0F754258F6B5100B4C3AA /* 二分查找.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二分查找.swift"; sourceTree = "<group>"; };
		F6C0F758258F6F3400B4C3AA /* 合并两个有序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "合并两个有序数组.swift"; sourceTree = "<group>"; };
		F6C0F75D258F752900B4C3AA /* 合并两个有序链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "合并两个有序链表.swift"; sourceTree = "<group>"; };
		F6CDFAEC25A03C29008471BE /* 剑指 Offer 09. 用两个栈实现队列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 09. 用两个栈实现队列.swift"; sourceTree = "<group>"; };
		F6CDFAEF25A04130008471BE /* 剑指 Offer 11. 旋转数组的最小数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 11. 旋转数组的最小数字.swift"; sourceTree = "<group>"; };
		F6CDFAF225A04BB1008471BE /* 剑指 Offer 10- I. 斐波那契数列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 10- I. 斐波那契数列.swift"; sourceTree = "<group>"; };
		F6CDFAF625A0559F008471BE /*  二进制中1的个数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = " 二进制中1的个数.swift"; sourceTree = "<group>"; };
		F6CDFAFB25A06637008471BE /* 剑指 Offer 16. 数值的整数次方.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 16. 数值的整数次方.swift"; sourceTree = "<group>"; };
		F6CDFAFF25A07242008471BE /* 剑指 Offer 17. 打印从1到最大的n位数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 17. 打印从1到最大的n位数.swift"; sourceTree = "<group>"; };
		F6CDFB0225A07749008471BE /* 剑指 Offer 18. 删除链表的节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 18. 删除链表的节点.swift"; sourceTree = "<group>"; };
		F6CDFB0525A08345008471BE /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift"; sourceTree = "<group>"; };
		F6CDFB0825A0900C008471BE /* 剑指 Offer 22. 链表中倒数第k个节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 22. 链表中倒数第k个节点.swift"; sourceTree = "<group>"; };
		F6CDFB0C25A09417008471BE /* 剑指 Offer 24. 反转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 24. 反转链表.swift"; sourceTree = "<group>"; };
		F6CDFB1025A0A281008471BE /* 剑指 Offer 25. 合并两个排序的链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 25. 合并两个排序的链表.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		F695DA3F2571F481004ECB52 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		F695DA392571F481004ECB52 = {
			isa = PBXGroup;
			children = (
				F695DA442571F481004ECB52 /* SwiftLeetCode */,
				F695DA432571F481004ECB52 /* Products */,
			);
			sourceTree = "<group>";
		};
		F695DA432571F481004ECB52 /* Products */ = {
			isa = PBXGroup;
			children = (
				F695DA422571F481004ECB52 /* SwiftLeetCode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		F695DA442571F481004ECB52 /* SwiftLeetCode */ = {
			isa = PBXGroup;
			children = (
				F695DA452571F481004ECB52 /* main.swift */,
				F6C0F752258F620100B4C3AA /* 树 */,
				F6C0F73E258F1A3100B4C3AA /* 排序 */,
				F6C0F757258F6F1A00B4C3AA /* 数组 */,
				F6C0F75C258F751400B4C3AA /* 链表 */,
				F6C0B81B259F235800A29262 /* 字符串 */,
				F6CDFAEB25A03C10008471BE /* 栈 */,
				F6CDFAF525A054EA008471BE /* 位运算 */,
				F6CDFAFA25A06623008471BE /* 其他 */,
			);
			path = SwiftLeetCode;
			sourceTree = "<group>";
		};
		F6C0B81B259F235800A29262 /* 字符串 */ = {
			isa = PBXGroup;
			children = (
				F6C0B81C259F239800A29262 /* 剑指 Offer 05. 替换空格.swift */,
				F66CDC0F25AB2747004AE799 /* 剑指 Offer 58 - II. 左旋转字符串.swift */,
				F66CDC1625AB33C4004AE799 /* 剑指 Offer 57 - II. 和为s的连续正数序列.swift */,
				F67FEB8125AF2FC700E50FE5 /* 剑指 Offer 50. 第一个只出现一次的字符.swift */,
				F67FEB9925B40C2200E50FE5 /* 剑指 Offer 58 - I. 翻转单词顺序.swift */,
			);
			path = "字符串";
			sourceTree = "<group>";
		};
		F6C0F73E258F1A3100B4C3AA /* 排序 */ = {
			isa = PBXGroup;
			children = (
				F6C0F73F258F1A4700B4C3AA /* 冒泡.swift */,
				F6C0F749258F3A6B00B4C3AA /* 选择.swift */,
				F6C0F74C258F3BB000B4C3AA /* 堆排序.swift */,
				F6C0F74F258F618700B4C3AA /* 插入.swift */,
				F6C0F754258F6B5100B4C3AA /* 二分查找.swift */,
			);
			path = "排序";
			sourceTree = "<group>";
		};
		F6C0F752258F620100B4C3AA /* 树 */ = {
			isa = PBXGroup;
			children = (
				F669A9662574DF2C00429AC2 /* 剑指 Offer 27_二叉树的镜像.swift */,
				F669A9692574ECBD00429AC2 /* 剑指 Offer 55 - I. 二叉树的深度.swift */,
				F647535F257A32BD004AEEEA /*  相同的树.swift */,
				F647536E257E1D4E004AEEEA /* 二叉树的最小深度.swift */,
				F617C68F259F546D008590E8 /* 剑指 Offer 07. 重建二叉树.swift */,
				F6B2E46925A195EB00E3EB30 /* 剑指 Offer 26. 树的子结构.swift */,
				F66CDBF925A4ADEE004AE799 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift */,
				F66CDBFC25A5ED3A004AE799 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */,
				F66CDC0625A5FE8E004AE799 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */,
				F66CDC1325AB2916004AE799 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */,
				F66CDC1925AB3924004AE799 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.swift */,
				F61BA2E525AC81B2000C8B55 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift */,
				F67FEB8725B31AF300E50FE5 /* 剑指 Offer 55 - II. 平衡二叉树.swift */,
				F67FEB8A25B31F3C00E50FE5 /* 剑指 Offer 28. 对称的二叉树.swift */,
				F6B7386325BC5C8B00B16630 /* 111.swift */,
			);
			path = "树";
			sourceTree = "<group>";
		};
		F6C0F757258F6F1A00B4C3AA /* 数组 */ = {
			isa = PBXGroup;
			children = (
				F6C0F758258F6F3400B4C3AA /* 合并两个有序数组.swift */,
				F6C0B817259F174000A29262 /* 剑指 Offer 04. 二维数组中的查找.swift */,
				F6CDFAEF25A04130008471BE /* 剑指 Offer 11. 旋转数组的最小数字.swift */,
				F6CDFAF225A04BB1008471BE /* 剑指 Offer 10- I. 斐波那契数列.swift */,
				F6B2E46C25A1A88100E3EB30 /* 剑指 Offer 29. 顺时针打印矩阵.swift */,
				F66CDC0925A89D17004AE799 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift */,
				F66CDC0C25AAE3BF004AE799 /* 剑指 Offer 40. 最小的k个数.swift */,
				F61BA2E825AC929C000C8B55 /* 剑指 Offer 03. 数组中重复的数字.swift */,
				F61BA2EB25AC955E000C8B55 /* 剑指 Offer 57. 和为s的两个数字.swift */,
				F61BA2EE25ADE97A000C8B55 /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift */,
				F67FEB8425B1D24F00E50FE5 /* 剑指 Offer 42. 连续子数组的最大和.swift */,
				F67FEB9025B3E41C00E50FE5 /* 剑指 Offer 61. 扑克牌中的顺子.swift */,
				F67FEB9325B3EDC300E50FE5 /* 剑指 Offer 59 - I. 滑动窗口的最大值.swift */,
				F67FEB9625B3FE6700E50FE5 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift */,
				F67FEB9C25B41BC300E50FE5 /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift */,
			);
			path = "数组";
			sourceTree = "<group>";
		};
		F6C0F75C258F751400B4C3AA /* 链表 */ = {
			isa = PBXGroup;
			children = (
				F6C0F75D258F752900B4C3AA /* 合并两个有序链表.swift */,
				F617C68C259F4DE7008590E8 /* 剑指 Offer 06. 从尾到头打印链表.swift */,
				F6CDFB0225A07749008471BE /* 剑指 Offer 18. 删除链表的节点.swift */,
				F6CDFB0825A0900C008471BE /* 剑指 Offer 22. 链表中倒数第k个节点.swift */,
				F6CDFB0C25A09417008471BE /* 剑指 Offer 24. 反转链表.swift */,
				F6CDFB1025A0A281008471BE /* 剑指 Offer 25. 合并两个排序的链表.swift */,
				F67FEB7E25AF2ABE00E50FE5 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift */,
				F63BA25625E2964500FC412A /* 328. 奇偶链.swift */,
				F63BA25925E29C5D00FC412A /* 19. 删除链表的倒数第 N 个结点.swift */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		F6CDFAEB25A03C10008471BE /* 栈 */ = {
			isa = PBXGroup;
			children = (
				F6CDFAEC25A03C29008471BE /* 剑指 Offer 09. 用两个栈实现队列.swift */,
				F6B2E46F25A1F8AD00E3EB30 /* 剑指 Offer 30. 包含min函数的栈.swift */,
				F66CDBF625A35BF2004AE799 /* 剑指 Offer 31. 栈的压入、弹出序列.swift */,
			);
			path = "栈";
			sourceTree = "<group>";
		};
		F6CDFAF525A054EA008471BE /* 位运算 */ = {
			isa = PBXGroup;
			children = (
				F6CDFAF625A0559F008471BE /*  二进制中1的个数.swift */,
				F67FEB8D25B3316B00E50FE5 /* 剑指 Offer 65. 不用加减乘除做加法.swift */,
			);
			path = "位运算";
			sourceTree = "<group>";
		};
		F6CDFAFA25A06623008471BE /* 其他 */ = {
			isa = PBXGroup;
			children = (
				F6CDFAFB25A06637008471BE /* 剑指 Offer 16. 数值的整数次方.swift */,
				F6CDFAFF25A07242008471BE /* 剑指 Offer 17. 打印从1到最大的n位数.swift */,
				F6CDFB0525A08345008471BE /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift */,
			);
			path = "其他";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		F695DA412571F481004ECB52 /* SwiftLeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F695DA492571F481004ECB52 /* Build configuration list for PBXNativeTarget "SwiftLeetCode" */;
			buildPhases = (
				F695DA3E2571F481004ECB52 /* Sources */,
				F695DA3F2571F481004ECB52 /* Frameworks */,
				F695DA402571F481004ECB52 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SwiftLeetCode;
			productName = SwiftLeetCode;
			productReference = F695DA422571F481004ECB52 /* SwiftLeetCode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		F695DA3A2571F481004ECB52 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1220;
				LastUpgradeCheck = 1220;
				TargetAttributes = {
					F695DA412571F481004ECB52 = {
						CreatedOnToolsVersion = 12.2;
					};
				};
			};
			buildConfigurationList = F695DA3D2571F481004ECB52 /* Build configuration list for PBXProject "SwiftLeetCode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = F695DA392571F481004ECB52;
			productRefGroup = F695DA432571F481004ECB52 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				F695DA412571F481004ECB52 /* SwiftLeetCode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		F695DA3E2571F481004ECB52 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F61BA2E625AC81B2000C8B55 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift in Sources */,
				F66CDC1A25AB3924004AE799 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.swift in Sources */,
				F6C0F755258F6B5100B4C3AA /* 二分查找.swift in Sources */,
				F67FEB8825B31AF300E50FE5 /* 剑指 Offer 55 - II. 平衡二叉树.swift in Sources */,
				F6CDFB0325A07749008471BE /* 剑指 Offer 18. 删除链表的节点.swift in Sources */,
				F669A9672574DF2C00429AC2 /* 剑指 Offer 27_二叉树的镜像.swift in Sources */,
				F6B2E46A25A195EB00E3EB30 /* 剑指 Offer 26. 树的子结构.swift in Sources */,
				F6B7386425BC5C8B00B16630 /* 111.swift in Sources */,
				F6CDFB0D25A09417008471BE /* 剑指 Offer 24. 反转链表.swift in Sources */,
				F66CDC1025AB2747004AE799 /* 剑指 Offer 58 - II. 左旋转字符串.swift in Sources */,
				F695DA462571F481004ECB52 /* main.swift in Sources */,
				F6CDFAFC25A06637008471BE /* 剑指 Offer 16. 数值的整数次方.swift in Sources */,
				F6C0F75E258F752900B4C3AA /* 合并两个有序链表.swift in Sources */,
				F61BA2E925AC929C000C8B55 /* 剑指 Offer 03. 数组中重复的数字.swift in Sources */,
				F61BA2EF25ADE97A000C8B55 /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift in Sources */,
				F67FEB7F25AF2ABE00E50FE5 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift in Sources */,
				F67FEB8B25B31F3C00E50FE5 /* 剑指 Offer 28. 对称的二叉树.swift in Sources */,
				F67FEB8225AF2FC700E50FE5 /* 剑指 Offer 50. 第一个只出现一次的字符.swift in Sources */,
				F6C0B81D259F239800A29262 /* 剑指 Offer 05. 替换空格.swift in Sources */,
				F6C0F750258F618700B4C3AA /* 插入.swift in Sources */,
				F6CDFAED25A03C29008471BE /* 剑指 Offer 09. 用两个栈实现队列.swift in Sources */,
				F66CDC0725A5FE8E004AE799 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift in Sources */,
				F6CDFB0925A0900C008471BE /* 剑指 Offer 22. 链表中倒数第k个节点.swift in Sources */,
				F6C0F740258F1A4700B4C3AA /* 冒泡.swift in Sources */,
				F67FEB9725B3FE6700E50FE5 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift in Sources */,
				F6CDFAF325A04BB1008471BE /* 剑指 Offer 10- I. 斐波那契数列.swift in Sources */,
				F6C0F74D258F3BB000B4C3AA /* 堆排序.swift in Sources */,
				F67FEB8E25B3316B00E50FE5 /* 剑指 Offer 65. 不用加减乘除做加法.swift in Sources */,
				F67FEB9D25B41BC300E50FE5 /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift in Sources */,
				F67FEB8525B1D24F00E50FE5 /* 剑指 Offer 42. 连续子数组的最大和.swift in Sources */,
				F6C0F759258F6F3400B4C3AA /* 合并两个有序数组.swift in Sources */,
				F66CDBFD25A5ED3A004AE799 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift in Sources */,
				F669A96A2574ECBD00429AC2 /* 剑指 Offer 55 - I. 二叉树的深度.swift in Sources */,
				F617C68D259F4DE7008590E8 /* 剑指 Offer 06. 从尾到头打印链表.swift in Sources */,
				F66CDC0D25AAE3BF004AE799 /* 剑指 Offer 40. 最小的k个数.swift in Sources */,
				F6475360257A32BD004AEEEA /*  相同的树.swift in Sources */,
				F6B2E47025A1F8AE00E3EB30 /* 剑指 Offer 30. 包含min函数的栈.swift in Sources */,
				F66CDBFA25A4ADEE004AE799 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift in Sources */,
				F6CDFB1125A0A281008471BE /* 剑指 Offer 25. 合并两个排序的链表.swift in Sources */,
				F66CDC0A25A89D17004AE799 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift in Sources */,
				F6C0F74A258F3A6B00B4C3AA /* 选择.swift in Sources */,
				F6CDFAF725A0559F008471BE /*  二进制中1的个数.swift in Sources */,
				F66CDC1425AB2916004AE799 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift in Sources */,
				F63BA25A25E29C5D00FC412A /* 19. 删除链表的倒数第 N 个结点.swift in Sources */,
				F67FEB9425B3EDC300E50FE5 /* 剑指 Offer 59 - I. 滑动窗口的最大值.swift in Sources */,
				F6CDFB0625A08345008471BE /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift in Sources */,
				F66CDBF725A35BF2004AE799 /* 剑指 Offer 31. 栈的压入、弹出序列.swift in Sources */,
				F6B2E46D25A1A88100E3EB30 /* 剑指 Offer 29. 顺时针打印矩阵.swift in Sources */,
				F6CDFAF025A04130008471BE /* 剑指 Offer 11. 旋转数组的最小数字.swift in Sources */,
				F67FEB9125B3E41C00E50FE5 /* 剑指 Offer 61. 扑克牌中的顺子.swift in Sources */,
				F66CDC1725AB33C4004AE799 /* 剑指 Offer 57 - II. 和为s的连续正数序列.swift in Sources */,
				F63BA25725E2964500FC412A /* 328. 奇偶链.swift in Sources */,
				F647536F257E1D4E004AEEEA /* 二叉树的最小深度.swift in Sources */,
				F6CDFB0025A07242008471BE /* 剑指 Offer 17. 打印从1到最大的n位数.swift in Sources */,
				F6C0B818259F174000A29262 /* 剑指 Offer 04. 二维数组中的查找.swift in Sources */,
				F617C690259F546D008590E8 /* 剑指 Offer 07. 重建二叉树.swift in Sources */,
				F61BA2EC25AC955E000C8B55 /* 剑指 Offer 57. 和为s的两个数字.swift in Sources */,
				F67FEB9A25B40C2200E50FE5 /* 剑指 Offer 58 - I. 翻转单词顺序.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		F695DA472571F481004ECB52 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		F695DA482571F481004ECB52 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		F695DA4A2571F481004ECB52 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = "";
				ENABLE_HARDENED_RUNTIME = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		F695DA4B2571F481004ECB52 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = "";
				ENABLE_HARDENED_RUNTIME = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		F695DA3D2571F481004ECB52 /* Build configuration list for PBXProject "SwiftLeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F695DA472571F481004ECB52 /* Debug */,
				F695DA482571F481004ECB52 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		F695DA492571F481004ECB52 /* Build configuration list for PBXNativeTarget "SwiftLeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F695DA4A2571F481004ECB52 /* Debug */,
				F695DA4B2571F481004ECB52 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = F695DA3A2571F481004ECB52 /* Project object */;
}
